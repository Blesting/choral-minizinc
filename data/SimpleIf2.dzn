in_size = 14;
statements = [ 
"int@A x = 0@A;", 
"int@B y1 = 1@B;",
"int@B y2 = 1@B;", %3 
"state_B.fun();",
"state_B.fun2();",
"if( x < 1 ){", %6
"state_B.fun();",
"state_B.fun(state_A.fun(state_B.fun()));",
"state_A.fun(x);", %9 
"} else {",
"state_A.fun();",
"state_B.fun(state_A.fun(y1));", %12
"state_A.fun(y1);",
"}" ]; 

statements_roles = [
r(A), r(B), r(B), 
r(B), r(B), r(A), 
r(B), r(B), r(A), 
NULL, r(A), r(B), 
r(A), NULL ];

num_blocks=3;

blocks = [|
0, in_size, 0|
6, 9, 1|
10, 13, 1|];

statements_blocks =[ 
1, 1, 1, 
1, 1, 1, 
2, 2, 2, 
2, 3, 3, 
3, 3 ];

roles = {A, B};

num_ifs = 1;

if_blocks = [|
2, 3|];

if_roles = [ A ];

num_deps = 4;
dependencies = array1d( DEPS, [
  "state_A.fun(state_B.fun())", "state_B.fun()", "state_A.fun(y1)", "y1"]); 
dep_from = array1d( DEPS, [
  A, B, A, B]); 
dep_to = array1d( DEPS, [
  B, A, B, A]); 
dep_def_at = array1d( DEPS, [
  0, 0, 0, 2]);
  
dep_used_at = [|
DEPS[1], 8|
DEPS[2], DEPS[1]|
DEPS[3], 12|
DEPS[4], DEPS[3]|
DEPS[4], 13|];














